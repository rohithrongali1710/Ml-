# -*- coding: utf-8 -*-
"""Simple spam classifier

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/192XqKgqnEqDriNYqwUzXkTB2IwCoxUJ9
"""

import numpy as np
import pandas as pd

import nltk

from google.colab import files
uploaded=files.upload()

sms = pd.read_csv('spam.csv', encoding='latin-1')

sms.head()

sms.drop(['Unnamed: 2','Unnamed: 3','Unnamed: 4'],axis=1)

sms_1=sms.drop(['Unnamed: 2','Unnamed: 3','Unnamed: 4'],axis=1)

sms_1.info()

import sklearn

from sklearn.preprocessing import LabelEncoder
lb=LabelEncoder()
sms_1['v1']=lb.fit_transform(sms_1['v1'].values)

sms_1

from nltk.stem import PorterStemmer
from nltk.corpus import stopwords
from nltk.stem import WordNetLemmatizer
import re
nltk.download('stopwords')

nltk.download('wordnet')

len(sms_1['v2'])

wnl=WordNetLemmatizer()
message=[]
for i in range(len(sms['v2'])):
  mss=re.sub('[^a-zA-Z]',' ',sms_1['v2'][i])
  mss=mss.lower()
  mss=mss.split()
  mss=[wnl.lemmatize(word) for word in mss if not word in set (stopwords.words('english'))]
  mss=' '.join(mss)
  message.append(mss)

from sklearn.feature_extraction.text import CountVectorizer
cv=CountVectorizer()
X=cv.fit_transform(message).toarray()

X
len(X)

Y=sms_1['v1']
len(Y)

Y

from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=0)

from sklearn.naive_bayes import MultinomialNB
spam_detection_model=MultinomialNB().fit(X_train,Y_train)

spam_detection_model.predict(X_test)

Y_test

spam_detection_model.predict(X_test)==Y_test

from sklearn.metrics import confusion_matrix
from sklearn.metrics import accuracy_score
cf=confusion_matrix(spam_detection_model.predict(X_test),Y_test)
cf
accuracy_score(spam_detection_model.predict(X_test),Y_test)

